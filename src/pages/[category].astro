---
import type { GetStaticPaths, MarkdownInstance } from 'astro';
import Layout from '../layouts/Layout.astro';
import { categories, type Category, type Post } from '../types';

interface Props {
    posts: MarkdownInstance<Post>[];
}

export const getStaticPaths: GetStaticPaths = async () => {
    const posts = await Astro.glob<Post>('./posts/*.md');
    return posts.flatMap((post) => ({
        params: { category: post.frontmatter.category },
        props: { posts },
    }));
};

const { category: categorySlug } = Astro.params;
const { posts } = Astro.props;
const filteredPosts = posts.filter((post) =>
    post.frontmatter.category.includes(categorySlug as string)
);
const category = categorySlug ? categories[categorySlug as Category] : undefined;
---

<Layout frontmatter={{ title: category?.name ?? '' }}>
    <ul>
        {
            filteredPosts.map((post) => (
                <li>
                    <a href={post.url}>{post.frontmatter.title}</a>
                </li>
            ))
        }
    </ul>
</Layout>
